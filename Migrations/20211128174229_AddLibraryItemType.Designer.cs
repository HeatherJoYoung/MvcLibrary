// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcLibrary.Data;

#nullable disable

namespace MvcLibrary.Migrations
{
    [DbContext(typeof(MvcLibraryContext))]
    [Migration("20211128174229_AddLibraryItemType")]
    partial class AddLibraryItemType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MvcLibrary.Models.LibraryItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LibraryItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LibraryItem");
                });

            modelBuilder.Entity("MvcLibrary.Models.Album", b =>
                {
                    b.HasBaseType("MvcLibrary.Models.LibraryItem");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSoloArtist")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Album");
                });

            modelBuilder.Entity("MvcLibrary.Models.Book", b =>
                {
                    b.HasBaseType("MvcLibrary.Models.LibraryItem");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("MvcLibrary.Models.Movie", b =>
                {
                    b.HasBaseType("MvcLibrary.Models.LibraryItem");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Studio")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
